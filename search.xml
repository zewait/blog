<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[react-native笔记-基础篇]]></title>
      <url>http://blog.00ps.win/2016/11/23/react-native%E7%AC%94%E8%AE%B0-%E5%9F%BA%E7%A1%80%E7%AF%87/</url>
      <content type="html"><![CDATA[<p>#Component</p>
<ul>
<li>定义组件首字必须大小，用于区分普通html元素</li>
</ul>
<h1 id="props"><a href="#props" class="headerlink" title="props"></a>props</h1><p>可用于定制组件，等同于htm中的attribute。<br>贯穿整个生命周期，不得做任何改变<br><a id="more"></a></p>
<h2 id="主要属性"><a href="#主要属性" class="headerlink" title="主要属性"></a>主要属性</h2><ul>
<li><a href="https://facebook.github.io/react/docs/react-component.html#defaultprops" target="_blank" rel="external">defaultProps</a></li>
<li><a href="https://facebook.github.io/react/docs/react-component.html#proptypes" target="_blank" rel="external">proptypes</a></li>
<li><a href="https://facebook.github.io/react/docs/react-component.html#props" target="_blank" rel="external">props</a><br>this.props.children该组件下的子组件</li>
</ul>
<h1 id="state"><a href="#state" class="headerlink" title="state"></a>state</h1><p>跟props一样用于定制组件用，不同的是state可以被修改<br>在构造器初始化，当你想改变组件状态的时候调用setState，<br>组件重新render，除非shouldComponentUpdate()返回false</p>
<h2 id="主要属性-1"><a href="#主要属性-1" class="headerlink" title="主要属性"></a>主要属性</h2><ul>
<li><a href="https://facebook.github.io/react/docs/react-component.html#state" target="_blank" rel="external">state</a><h2 id="主要方法"><a href="#主要方法" class="headerlink" title="主要方法"></a>主要方法</h2></li>
<li><a href="https://facebook.github.io/react/docs/react-component.html#setstate" target="_blank" rel="external">setState</a><br>此方法不是重新设置state，而是合并</li>
</ul>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://facebook.github.io/react/docs/state-and-lifecycle.html" target="_blank" rel="external">State and Lifecycle</a></li>
<li><a href="http://redux.js.org/index.html" target="_blank" rel="external">更好的控制状态Redux</a></li>
</ul>
<h1 id="style"><a href="#style" class="headerlink" title="style"></a>style</h1><p>跟html的style差不多，不同的是background-color这些要写成backgroundColor。<br>style能是普通的js对象，也能是使用StyleSheet.create来创建。<br>更推荐的是使用StyleSheet.create在组件的同一个地方创建</p>
<h2 id="StyleSheet-create-vs-普通js对象"><a href="#StyleSheet-create-vs-普通js对象" class="headerlink" title="StyleSheet.create vs 普通js对象"></a>StyleSheet.create vs 普通js对象</h2><ul>
<li>StyleSheet.create创建返回的是一个id，通过StyleSheetRegistry.getStyleByID获取该id<br>指向的对象</li>
<li>用StyleSheet.create创建代替每次都创建新的对象</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[安装httpd并整合tomcat]]></title>
      <url>http://blog.00ps.win/2015/05/02/%E5%AE%89%E8%A3%85httpd%E5%B9%B6%E6%95%B4%E5%90%88tomcat/</url>
      <content type="html"><![CDATA[<h1 id="安装httpd"><a href="#安装httpd" class="headerlink" title="安装httpd"></a>安装httpd</h1><p>下载<a href="http://httpd.apache.org/" target="_blank" rel="external">httpd</a>并解压<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">weget http://mirrors.hust.edu.cn/apache//httpd/httpd-2.2.29.tar.gz</div><div class="line">tar -zxvf httpd-2.2.29.tar.gz</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>配置编译安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">cd httpd-2.2.29</div><div class="line">#prefix是指定了安装位置</div><div class="line">./configure --prefix=/usr/local/apache2 \      # 安装目录</div><div class="line">--enable-modules=most \                        # 大部分模块静态编译到httpd的二进制文件中</div><div class="line">--enable-mods-shared=all \                     # 表示动态加载所有模块,如果去掉shared的话,是静态加载所有模块</div><div class="line">--enable-so \</div><div class="line">make &amp;&amp; make install</div></pre></td></tr></table></figure></p>
<p>以上没有错误就启动httpd, 注意:因为还没加进服务，所以需要到httpd安装目录下用前端控制工具启动(不能用service httpd start)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/local/apache2/bin/apachectl start</div></pre></td></tr></table></figure><br>打开浏览器浏览<a href="http://localhost" target="_blank" rel="external">http://localhost</a>看见It’s ok就代表httpd安装并启动成功了</p>
<p>加进服务和开机启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">cp /usr/local/apache2/bin/apachectl /init.d/httpd</div><div class="line">ln -s /etc/init.d/httpd /etc/rc.d/rc5.d/S85httpd</div><div class="line"># 运行chkconfig --list发现列表中并没有httpd,通过chkconfig --add httpd来添加,</div><div class="line"># 可能会提示httpd服务不支持chkconfig,需要编辑/etc/init.d/httpd,加入注析#chkconfig 345 85 15</div><div class="line"># 345代表哪些linux级别需要启动httpd,启动序号85 关闭序号15</div><div class="line">chkconfig --add httpd</div><div class="line"># 发现存在了</div><div class="line">chkconfig --list httpd</div><div class="line"># 接下来就可能用service http命令关闭和启动httpd了</div><div class="line"></div><div class="line"># 加进开机启动</div><div class="line">chkconfig httpd on</div></pre></td></tr></table></figure></p>
<h1 id="整合tomcat"><a href="#整合tomcat" class="headerlink" title="整合tomcat"></a>整合tomcat</h1><p>在/usr/local/apache2/conf/httpd.conf最后加上Include conf/extra/tomcat-vhosts.conf,<br>编辑/usr/local/apache2/conf/extra/tomcat-vhosts.conf<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"># enable name virtual</div><div class="line">NameVirtualHost *:80</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">VirtualHost</span> *<span class="attr">:80</span>&gt;</span></div><div class="line">  ServerName test.h4fan.com</div><div class="line">  DocumentRoot /path/to/project/root</div><div class="line">  ProxyPass / http://localhost:8080/</div><div class="line">  ProxyPassReverse / http://localhost:8080/</div><div class="line">  ErrorLog "logs/test-error.log"</div><div class="line"><span class="tag">&lt;/<span class="name">VirtualHost</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>重启httpd,发现出错了<br><em>Invalid command ‘ProxyPass’, perhaps misspelled or defined by a module not included in the server configuration</em><br>需要安装proxy等模块</p>
<p>介绍下添加模块的命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/local/apache2/bin/apxs -c -i -a mod_proxy.c proxy_util.c</div></pre></td></tr></table></figure><br>说明:<br>-c 执行编译操作<br>-i 安装操作,安装一个或多个动态共享对象到modules目录<br>-a 自动增加一个LoadModule到httpd.conf文件,以激活模块,若此存在则启动之<br>-A 与-a类似,但是它增加的LoadModule前面加有#<br>-e 需要执行编辑操作,可与-a和-A选项配合使用,与-i操作类似,修改httpd.conf文件,但并不安装此模块</p>
<p>切换到源代码目录下的/modules/proxy,执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#/usr/local/apache2/bin/apxs -c -i -a mod_proxy.c proxy_util.c</div><div class="line">#/usr/local/apache2/bin/apxs -c -i -a mod_proxy_http.c</div><div class="line">#/usr/local/apache2/bin/apxs -c -i -a mod_proxy_ajp.c ajp*.c</div></pre></td></tr></table></figure></p>
<p>现在再启动httpd就没出错了</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[判断指定区间(或操作符实现)]]></title>
      <url>http://blog.00ps.win/2014/10/22/%E5%88%A4%E6%96%AD%E6%8C%87%E5%AE%9A%E5%8C%BA%E9%97%B4-%E6%88%96%E6%93%8D%E4%BD%9C%E7%AC%A6%E5%AE%9E%E7%8E%B0/</url>
      <content type="html"><![CDATA[<p>一般求一个值是否在指定区间为i&gt;=min&amp;&amp;i&lt;=max，但今天从网上看到这么一种写法((i-min)|(max-i))&gt;=0，原理很简单，只要i-min或者max-i其中为负数的时候，说明已经超出了区间，或操作得出的数字必定为负数</p>
]]></content>
    </entry>
    
  
  
</search>
