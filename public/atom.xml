<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[{Wait}]]></title>
  <subtitle><![CDATA[Wait for something]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://blog.h4fan.com/"/>
  <updated>2015-05-01T03:06:29.637Z</updated>
  <id>http://blog.h4fan.com/</id>
  
  <author>
    <name><![CDATA[Wait]]></name>
    <email><![CDATA[wait@h4fan.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[安装httpd并整合tomcat]]></title>
    <link href="http://blog.h4fan.com/2015/05/01/%E5%AE%89%E8%A3%85httpd%E5%B9%B6%E6%95%B4%E5%90%88tomcat/"/>
    <id>http://blog.h4fan.com/2015/05/01/安装httpd并整合tomcat/</id>
    <published>2015-05-01T01:21:50.000Z</published>
    <updated>2015-05-01T03:05:01.000Z</updated>
    <content type="html"><![CDATA[<h1 id="安装httpd">安装httpd</h1>
<p>下载<a href="http://httpd.apache.org/" target="_blank" rel="external">httpd</a>并解压</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">weget <span class="keyword">http</span>://mirrors.hust.edu.cn/apach<span class="comment">e//httpd/httpd-2.2.29.tar.gz</span></div><div class="line">tar -zxvf httpd-<span class="number">2.2</span><span class="number">.29</span>.tar.gz</div></pre></td></tr></table></figure>

<p>配置编译安装</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">cd</span> httpd-<span class="number">2.2</span>.<span class="number">29</span></div><div class="line">./configure --prefix=/usr/local/apache2 #prefix是指定了安装位置</div><div class="line"><span class="keyword">make</span> &amp;&amp; <span class="keyword">make</span> install</div></pre></td></tr></table></figure>

<p>以上没有错误就启动httpd, 注意:因为还没加进服务，所以需要到httpd安装目录下用前端控制工具启动(不能用service httpd start)</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="regexp">/usr/</span>local<span class="regexp">/apache2/</span>bin<span class="regexp">/apachectl start</span></div></pre></td></tr></table></figure><br>打开浏览器浏览<a href="http://localhost" target="_blank" rel="external">http://localhost</a>看见It’s ok就代表httpd安装并启动成功了<br><br>加进服务和开机启动<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">cp /usr/local/apache2/bin/apachectl /init.d/httpd</div><div class="line">ln -s /etc/init.d/httpd /etc/rc5.d/S85httpd</div><div class="line"><span class="preprocessor"># 运行chkconfig --list发现列表中并没有httpd,通过chkconfig --add httpd来添加,</span></div><div class="line"><span class="preprocessor"># 可能会提示httpd服务不支持chkconfig,需要编辑/etc/init.d/httpd,加入注析#chkconfig 345 85 15</span></div><div class="line"><span class="preprocessor"># 345代表哪些linux级别需要启动httpd,启动序号85 关闭序号15</span></div><div class="line">chkconfig --add httpd</div><div class="line"><span class="preprocessor"># 发现存在了</span></div><div class="line">chkconfig --list httpd</div><div class="line"><span class="preprocessor"># 接下来就可能用service http命令关闭和启动httpd了</span></div><div class="line"></div><div class="line"><span class="preprocessor"># 加进开机启动</span></div><div class="line">chkconfig httpd on</div></pre></td></tr></table></figure>

<h1 id="整合tomcat">整合tomcat</h1>
<p>在/usr/local/apache2/conf/httpd.conf最后加上Include conf/extra/tomcat-vhosts.conf,<br>编辑/usr/local/apache2/conf/extra/tomcat-vhosts.conf</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"># enable name virtual</div><div class="line">NameVirtualHost *:80</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="title">VirtualHost</span> *<span class="attribute">:80</span>&gt;</span></div><div class="line">  ServerName test.h4fan.com</div><div class="line">  DocumentRoot /path/to/project/root</div><div class="line">  ProxyPass / http://localhost:8080/</div><div class="line">  ProxyPassReverse / http://localhost:8080/</div><div class="line">  ErrorLog "logs/test-error.log"</div><div class="line"><span class="tag">&lt;/<span class="title">VirtualHost</span>&gt;</span></div></pre></td></tr></table></figure>

<p>重启httpd,发现出错了<br><em>Invalid command ‘ProxyPass’, perhaps misspelled or defined by a module not included in the server configuration</em><br>原因是源代码编译安装的是个纯净的httpd!没有安装任何一个模块</p>
<p>介绍下添加模块的命令</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/local/apache2/bin/apxs -<span class="built_in">c</span> -i -a mod_proxy.<span class="built_in">c</span> proxy_util.<span class="built_in">c</span></div></pre></td></tr></table></figure><br>说明:<br>-c 执行编译操作<br>-i 安装操作,安装一个或多个动态共享对象到modules目录<br>-a 自动增加一个LoadModule到httpd.conf文件,以激活模块,若此存在则启动之<br>-A 与-a类似,但是它增加的LoadModule前面加有#<br>-e 需要执行编辑操作,可与-a和-A选项配合使用,与-i操作类似,修改httpd.conf文件,但并不安装此模块<br><br>切换到源代码目录下的/modules/proxy,执行<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#/usr/local/apache2/bin/apxs -<span class="built_in">c</span> -i -a mod_proxy.<span class="built_in">c</span> proxy_util.<span class="built_in">c</span></div><div class="line">#/usr/local/apache2/bin/apxs -<span class="built_in">c</span> -i -a mod_proxy_http.<span class="built_in">c</span></div><div class="line">#/usr/local/apache2/bin/apxs -<span class="built_in">c</span> -i -a mod_proxy_ajp.<span class="built_in">c</span> ajp*.<span class="built_in">c</span></div></pre></td></tr></table></figure>

<p>现在再启动httpd就没出错了</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="安装httpd">安装httpd</h1>
<p>下载<a href="http://httpd.apache.org/" target="_blank" rel="external">httpd</a>并解压</p>
<figure class="highlig]]>
    </summary>
    
      <category term="tomcat" scheme="http://blog.h4fan.com/tags/tomcat/"/>
    
      <category term="apache httpd" scheme="http://blog.h4fan.com/tags/apache-httpd/"/>
    
      <category term="linux" scheme="http://blog.h4fan.com/tags/linux/"/>
    
      <category term="服务器" scheme="http://blog.h4fan.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[判断指定区间(或操作符实现)]]></title>
    <link href="http://blog.h4fan.com/2014/10/21/%E5%88%A4%E6%96%AD%E6%8C%87%E5%AE%9A%E5%8C%BA%E9%97%B4-%E6%88%96%E6%93%8D%E4%BD%9C%E7%AC%A6%E5%AE%9E%E7%8E%B0/"/>
    <id>http://blog.h4fan.com/2014/10/21/判断指定区间-或操作符实现/</id>
    <published>2014-10-21T02:57:36.000Z</published>
    <updated>2014-12-03T11:31:37.000Z</updated>
    <content type="html"><![CDATA[<p>一般求一个值是否在指定区间为i&gt;=min&amp;&amp;i&lt;=max，但今天从网上看到这么一种写法((i-min)|(max-i))&gt;=0，原理很简单，只要i-min或者max-i其中为负数的时候，说明已经超出了区间，或操作得出的数字必定为负数</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>一般求一个值是否在指定区间为i&gt;=min&amp;&amp;i&lt;=max，但今天从网上看到这么一种写法((i-min)|(max-i))&gt;=0，原理很简单，只要i-min或者max-i其中为负数的时候，说明已经超出了区间，或操作得出的数字必定为负数</p>]]>
    </summary>
    
      <category term="算法" scheme="http://blog.h4fan.com/categories/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
